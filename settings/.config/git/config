# Taken from https://gitlab.com/sscherfke/dotfiles/-/blob/master/_gitconfig

[pull]
# The "rebase" strategy does not work well when there are uncommited changes,
# but the "merge" strategy does.  This is more convenient and I do explit
# "git pull --rebase" when needed.
rebase = false

[push]
default = simple

[alias]
br = branch
ci = commit
co = checkout
st = status
last = log -1 HEAD
unstage = reset HEAD --
rollback = reset HEAD^
lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold)%s%C(reset)%n''%C(blue)%h%C(reset) - %C(cyan)%an%C(reset) on %C(green)%aD%C(reset) %C(yellow)(%ar)%C(reset)%C(red)%d%C(reset)%n' --all
lg5 = !"git lg -5"
# Push, skip CI/CD
pushnoci = push -o ci.skip
# Push feature branch and merge into develop if pipeline succeeds
pushmergedevelop = push -o merge_request.create -o merge_request.target=develop -o merge_request.merge_when_pipeline_succeeds
# Push develop branch and create a request for mergin into master
pushmergemaster = push -o merge_request.create -o merge_request.target=master

[user]
name = Carli* Freudenberg
signingkey = D42B36DF90C9801018F84935A6C26DB8F771FC68

[commit]
gpgsign = true
